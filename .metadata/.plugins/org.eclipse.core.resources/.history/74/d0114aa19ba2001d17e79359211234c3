package day4;

import java.util.Date;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

// lombok 사용하기

@Getter
@Setter
@ToString
@AllArgsConstructor
@NoArgsConstructor
public class MemberTable {

	private String id = null;
	private String password = null;
	private String name = null;
	private String phone = null;// ex) 010-0000-0000
	private String role = null; // 권한설정 고객은(C), 판매자는 (S)
	private Date regdate = null;

	private int idx = 0;

	// 이름의 길이가 유효한지 확인하는 메소드 만들기 (2~4자만 가능)
	public boolean invalidName() {
		boolean ret = false;

		// 2~4자 사이만 true를, 그 이외에는 false를 반환하기
		if (1 < this.name.length() && this.name.length() < 5) { // 만약 2~4자 사이면
			return true;
		} else {
			return ret;
		}
	}

	// 휴대폰 번호 길이가 정확한지 확인하는 메소드만들기
	public boolean invalidPhone() {
		boolean retphone = false;
		
         if( this.phone.length()< 14) { // 
        	 return true;
         }
         else { 
        	 System.out.println("비밀번호는 '-'를 포함하여 입력하여 주십시오.");
        	 return retphone;
         
         }
         
	}

	// 권한이 정보가 C와 S로만 되어있는지 확인하는 메소드
	//public boolean invalidRole() {
	//	boolean result1 = true;
	//	boolean result2 = false;
	//	if (result2) {
	//		System.out.println("존재하지 않는 코드입니다.");
	//	}
	//  }

	// id는 길이가 30자 이내만 가능한지 확인하는메소드

	// 연락처 정보가 000-0000-0000인데, 00000000000으로 반환하는 메소드 (split사용하기)
}